{"ast":null,"code":"var _jsxFileName = \"/Users/hakmuradyan/Desktop/UCLA/Projects/Project-3/reactPart/src/components/pages/LoginForm.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux'; // semantic-ui\n\nimport { Container, Form, Input, Button, Grid } from 'semantic-ui-react'; // alert\n\nimport Alert from 'react-s-alert'; // API\n\nimport * as MyAPI from '../../utils/MyAPI';\nimport { LOCAL_STRAGE_KEY } from '../../utils/Settings';\nimport { loginWithEmailRedux } from '../../actions/UserActions';\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.onSubmit = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const params = {\n        email: email,\n        password: password\n      }; // create account\n\n      MyAPI.signinWithPassword(params).then(data => {\n        return new Promise((resolve, reject) => {\n          if (data.status !== 'success') {\n            let error_text = 'Error';\n\n            if (data.detail) {\n              error_text = data.detail;\n            }\n\n            reject(error_text);\n          } else {\n            // success\n            const params = {\n              user: data.user,\n              login_token: data.login_token\n            };\n            localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(params));\n            this.props.mapDispatchToLoginWithPassword(params);\n            resolve();\n          }\n        });\n      }).then(() => {\n        // redirect\n        this.props.history.push(\"/dashboard\");\n      }).catch(err => {\n        console.log(\"err:\", err);\n        Alert.error(err, {\n          position: 'top-right',\n          effect: 'slide',\n          timeout: 5000\n        });\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    return React.createElement(Container, {\n      text: true,\n      className: \"create_acount_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      style: {\n        marginTop: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      textAlign: \"left\",\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      style: {\n        width: '100%'\n      },\n      icon: \"mail outline\",\n      iconPosition: \"left\",\n      name: \"email\",\n      onChange: this.handleChange,\n      value: email,\n      placeholder: \"yourname@example.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      textAlign: \"left\",\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      style: {\n        width: '100%'\n      },\n      icon: \"key\",\n      iconPosition: \"left\",\n      name: \"password\",\n      onChange: this.handleChange,\n      value: password,\n      placeholder: \"********\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: '100%'\n      },\n      loading: this.state.loading,\n      disabled: this.state.loading,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Sign in\")))));\n  }\n\n} // react-redux\n\n\nfunction mapStateToProps({\n  user\n}) {\n  return {\n    user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mapDispatchToLoginWithPassword: data => dispatch(loginWithEmailRedux({\n      params: data\n    }))\n  };\n} // export default withRouter(MainPage);\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginForm));","map":{"version":3,"sources":["/Users/hakmuradyan/Desktop/UCLA/Projects/Project-3/reactPart/src/components/pages/LoginForm.js"],"names":["React","Component","withRouter","connect","Container","Form","Input","Button","Grid","Alert","MyAPI","LOCAL_STRAGE_KEY","loginWithEmailRedux","LoginForm","state","email","password","onSubmit","params","signinWithPassword","then","data","Promise","resolve","reject","status","error_text","detail","user","login_token","localStorage","setItem","JSON","stringify","props","mapDispatchToLoginWithPassword","history","push","catch","err","console","log","error","position","effect","timeout","handleChange","e","name","value","setState","render","marginTop","width","loading","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport { connect } from 'react-redux'\n\n// semantic-ui\nimport { Container, Form, Input, Button, Grid } from 'semantic-ui-react'\n\n// alert\nimport Alert from 'react-s-alert';\n\n// API\nimport * as MyAPI from '../../utils/MyAPI'\nimport { LOCAL_STRAGE_KEY } from '../../utils/Settings'\n\nimport { loginWithEmailRedux } from '../../actions/UserActions'\n\nclass LoginForm extends Component {\n\n  state = {\n    email: '',\n    password: '',\n  }\n\n  onSubmit = () => {\n\n    const { email, password } = this.state\n    const params = {\n      email: email,\n      password: password,\n    }\n\n    // create account\n    MyAPI.signinWithPassword(params)\n    .then((data) => {\n\n      return new Promise((resolve, reject) => {\n\n        if (data.status !== 'success'){\n          let error_text = 'Error';\n          if (data.detail){\n            error_text = data.detail\n          }\n          reject(error_text)\n\n        } else {\n          // success\n          const params = {\n            user: data.user,\n            login_token: data.login_token,\n          }\n\n          localStorage.setItem(LOCAL_STRAGE_KEY, JSON.stringify(params))\n          this.props.mapDispatchToLoginWithPassword(params)\n          resolve()\n        }\n      })\n    })\n    .then(() => {\n      // redirect\n      this.props.history.push(\"/dashboard\")\n    })\n    .catch((err) => {\n      console.log(\"err:\", err)\n\n      Alert.error(err, {\n        position: 'top-right',\n        effect: 'slide',\n        timeout: 5000\n      });\n    })\n  }\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value })\n  }\n\n  render() {\n\n    const { email, password } = this.state\n\n    return(\n      <Container text className='create_acount_form'>\n\n        <Form onSubmit={this.onSubmit} style={{marginTop:60}}>\n          <Grid>\n\n            <Grid.Column textAlign='left' width={16}>\n              <label>Email</label>\n              <Input\n                style={{width: '100%'}}\n                icon='mail outline'\n                iconPosition='left'\n                name='email'\n                onChange={this.handleChange}\n                value={email}\n                placeholder='yourname@example.com' />\n            </Grid.Column>\n\n            <Grid.Column textAlign='left' width={16}>\n              <label>Password</label>\n              <Input\n                style={{width: '100%'}}\n                icon='key'\n                iconPosition='left'\n                name='password'\n                onChange={this.handleChange}\n                value={password}\n                placeholder='********' />\n            </Grid.Column>\n\n            <Grid.Column  width={16}>\n              <Button\n                style={{width: '100%'}}\n                loading={this.state.loading}\n                disabled={this.state.loading}\n                type='submit'>Sign in</Button>\n            </Grid.Column>\n\n          </Grid>\n\n        </Form>\n\n      </Container>\n    )\n  }\n}\n\n// react-redux\nfunction mapStateToProps ( {user} ) {\n  return {\n    user\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    mapDispatchToLoginWithPassword: (data) => dispatch(loginWithEmailRedux({ params: data})),\n  }\n}\n\n\n// export default withRouter(MainPage);\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )(LoginForm) )\n"]},"metadata":{},"sourceType":"module"}